// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Coder.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Coder {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object Alph=null;
  public static Object Alfabeto=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=24;
      if ($opEqualY($invokeField("length",args),0)) {
        $line=25;
        Alfabeto=$fix(GCollections.asSet('a','b','c','d'));
      }
      else {
        $line=27;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($invokeMethod("length",((java.lang.String[])args)[$int(0)],new Object[]{}))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          $v1.add($invokeMethod("charAt",((java.lang.String[])args)[$int(0)],new Object[]{i}));
        }
        Alfabeto=$fix($opDiffeY($v1,GCollections.asSet('!','#')));
      }
      $line=30;
      Object coder=$fix(Coder.createTransducer(Alfabeto));
      $line=31;
      System.out.println($message(new Object[]{$opAdditY("Input strings of the form w_1!w_2!...!w_2n-1!w_2n# with w_i over ",Alph)}));
      $line=33;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"main",$line);
    }
  }
  public static ITransducer createTransducer(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=39;
      Object M0=$fix(GCollections.asSet(true,false));
      $line=40;
      gold.structures.set.ISet $v5=$newSet();
      $v6:for (Object p:GCollections.unmodifiableCollection(A)) {
        $v5.add($opAdditY("",p));
      }
      Object M1=$fix($v5);
      $line=41;
      gold.structures.set.ISet $v7=$newSet();
      $v8:for (Object p:GCollections.unmodifiableCollection(A)) {
        for (Object q:GCollections.unmodifiableCollection(A)) {
          $v7.add($opAdditY($opAdditY("",p),q));
        }
      }
      Object M2=$fix($v7);
      $line=42;
      gold.structures.set.ISet $v9=$newSet();
      $v10:for (Object p:GCollections.unmodifiableCollection(A)) {
        for (Object q:GCollections.unmodifiableCollection(A)) {
          for (Object r:GCollections.unmodifiableCollection(A)) {
            $v9.add($opAdditY($opAdditY($opAdditY("",p),q),r));
          }
        }
      }
      Object M3=$fix($v9);
      $line=43;
      Object Ls=$fix($opUnionY($opUnionY($opCartsY(new Object[]{GCollections.asSet(""),GCollections.asSet(false),M1}),$opCartsY(new Object[]{GCollections.asSet(""),GCollections.asSet(false),M2})),$opCartsY(new Object[]{GCollections.asSet(""),GCollections.asSet(false),M3})));
      $line=46;
      Alph=$fix(A);
      $line=54;
      Object Q=$fix($opUnionY($opUnionY($opUnionY($opUnionY($opUnionY(Ls,$opCartsY(new Object[]{M3,GCollections.asSet(true,false),GCollections.asSet("")})),$opCartsY(new Object[]{M3,GCollections.asSet(true,false),M1})),$opCartsY(new Object[]{M3,GCollections.asSet(true,false),M2})),$opCartsY(new Object[]{M3,GCollections.asSet(true,false),M3})),GCollections.asSet("err","F","I")));
      $line=58;
      Object \u03A3=$fix($opUnionY(A,GCollections.asSet('#','!')));
      $line=60;
      Object O=$fix($opUnionY(\u03A3,GCollections.asSet('*')));
      $line=62;
      Object q_0=$fix("I");
      $line=64;
      Object F=$fix(GCollections.asSet("F"));
      $line=67;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,q_0,F,new GMethod(Coder.class,"\u03B4"),new GMethod(Coder.class,"g"),new GMethod(Coder.class,"h")});
      if (true) break $try;
      $line=68;
      $rethrow(new RuntimeException("The function \"createTransducer(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=71;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=75;
      String c=null;
      c=$defaultValue(String.class);
      $line=76;
      c=$cast(String.class,$fix(""));
      $line=79;
      if (($opEqualY(q,"I")&&$opMembrY(\u03C3,Alph))) {
        $line=80;
        c=$cast(String.class,$fix($opAdditY(c,\u03C3)));
        $line=80;
        $result=GCollections.asList("",false,c);
        if (true) break $try;
      }
      else {
        $line=81;
        if (($opEqualY(q,"I")&&$opEqualY(\u03C3,'#'))) {
          $line=82;
          $result="F";
          if (true) break $try;
        }
        else {
          $line=84;
          if (($opEqualY(q,"F")&&!$opEqualY(\u03C3,""))) {
            $line=85;
            $result="err";
            if (true) break $try;
          }
          else {
            $line=87;
            if ($opEqualY(q,"err")) {
              $line=88;
              $result="err";
              if (true) break $try;
            }
            else {
              $line=91;
              $result="err";
              if (true) break $try;
            }
          }
        }
      }
      $line=93;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v11, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v12=GCollections.unmodifiableCollection($v11).iterator();
      Object p=$v12.next();
      Object even=$v12.next();
      Object c=$v12.next();
      $line=96;
      String new_p=null;
      new_p=$defaultValue(String.class);
      $line=97;
      String new_c=null;
      new_c=$defaultValue(String.class);
      $line=98;
      new_p=$cast(String.class,$fix(""));
      $line=99;
      new_c=$cast(String.class,$fix(""));
      $line=102;
      if (((($opEqualY(p,"")&&$opEqualY(even,false))&&!$opEqualY($invokeMethod("length",c,new Object[]{}),3))&&$opMembrY(\u03C3,Alph))) {
        $line=103;
        new_c=$cast(String.class,$fix($opAdditY(c,\u03C3)));
        $line=103;
        $result=GCollections.asList(p,false,new_c);
        if (true) break $try;
      }
      else {
        $line=107;
        if (($opEqualY($invokeMethod("length",c,new Object[]{}),3)&&$opEqualY(\u03C3,'!'))) {
          $line=108;
          new_p=$cast(String.class,$fix(c));
          $line=108;
          $result=GCollections.asList(new_p,!$bool(even),new_c);
          if (true) break $try;
        }
        else {
          $line=110;
          if ((((!$opEqualY(p,"")&&$opEqualY($invokeMethod("length",c,new Object[]{}),3))&&$opEqualY(even,true))&&$opEqualY(\u03C3,'#'))) {
            $line=111;
            $result="F";
            if (true) break $try;
          }
          else {
            $line=114;
            if (((!$opEqualY(p,"")&&!$opEqualY($invokeMethod("length",c,new Object[]{}),3))&&$opMembrY(\u03C3,Alph))) {
              $line=115;
              new_c=$cast(String.class,$fix($opAdditY(c,\u03C3)));
              $line=115;
              $result=GCollections.asList(p,even,new_c);
              if (true) break $try;
            }
            else {
              $line=119;
              $result="err";
              if (true) break $try;
            }
          }
        }
      }
      $line=121;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8p,even,c\u27E9:java.lang.Iterable,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=126;
      Object output=$fix("");
      $line=127;
      String p=null;
      p=$defaultValue(String.class);
      $line=128;
      String c=null;
      c=$defaultValue(String.class);
      $line=129;
      Boolean even=null;
      even=$defaultValue(Boolean.class);
      $line=132;
      if (($bool(($opEqualY(q,"I")&&!$opEqualY(\u03C3,'#')))||$opEqualY(q,"F"))) {
        $line=133;
        $result="";
        if (true) break $try;
      }
      else {
        $line=134;
        if ($opEqualY(q,"err")) {
          $line=135;
          $result="";
          if (true) break $try;
        }
        else {
          $line=137;
          if (($opEqualY(q,"I")&&$opEqualY(\u03C3,'#'))) {
            $line=138;
            $result="#";
            if (true) break $try;
          }
          else {
            $line=140;
            if ($opEqualY($opAbsolY(q),3)) {
              $line=141;
              p=$cast(String.class,$fix($getArrayValue(q,new Object[]{0})));
              $line=142;
              even=$cast(Boolean.class,$fix($getArrayValue(q,new Object[]{1})));
              $line=143;
              c=$cast(String.class,$fix($getArrayValue(q,new Object[]{2})));
              $line=149;
              if ((($opEqualY(\u03C3,'!')&&$opEqualY(even,false))&&$opEqualY(((java.lang.String)c).length(),3))) {
                $line=150;
                output=$fix($opAdditY($opAdditY(output,c),\u03C3));
                $line=150;
                $result=output;
                if (true) break $try;
              }
              else {
                $line=151;
                if ((($bool(($opEqualY(\u03C3,'!')||$opEqualY(\u03C3,'#')))&&$opEqualY(even,true))&&$opEqualY(((java.lang.String)c).length(),3))) {
                  $line=152;
                  if ($opEqualY(p,c)) {
                    $line=153;
                    output=$fix($opAdditY($opAdditY(output,"*"),\u03C3));
                    $line=153;
                    $result=output;
                    if (true) break $try;
                  }
                  else {
                    $line=155;
                    output=$fix($opAdditY($opAdditY(output,c),\u03C3));
                    $line=155;
                    $result=output;
                    if (true) break $try;
                  }
                }
                else {
                  $line=159;
                  $result="";
                  if (true) break $try;
                }
              }
            }
          }
        }
      }
      $line=162;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"h",$line);
    }
    return $result;
  }
}
