// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Coder.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Coder {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object Alph=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=23;
      if ($opEqualY($invokeField("length",args),0)) {
        $line=23;
        Alph=$fix(GCollections.asSet('a','c','t'));
      }
      else {
        $line=25;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($invokeMethod("length",((java.lang.String[])args)[$int(0)],new Object[]{}))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          $v1.add($invokeMethod("charAt",((java.lang.String[])args)[$int(0)],new Object[]{i}));
        }
        Alph=$fix($opDiffeY($v1,GCollections.asSet('$','#')));
      }
      $line=28;
      Object coder=$fix(Coder.createTransducer(Alph));
      $line=29;
      System.out.println($message(new Object[]{$opAdditY("Input strings of the form \u2378_1!\u2378_2!...!\u2378_2n-1!\u2378_2n# with \u2378_i over ",Alph)}));
      $line=31;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"main",$line);
    }
  }
  public static ITransducer createTransducer(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=37;
      Object M0=$fix(GCollections.asSet(true,false));
      $line=38;
      Object M1=$fix(A);
      $line=39;
      Object M2=$fix($opCartsY(new Object[]{A,A}));
      $line=40;
      Object M3=$fix($opCartsY(new Object[]{A,A,A}));
      $line=41;
      Object Ls=$fix($opUnionY($opUnionY($opCartsY(new Object[]{GCollections.asSet(false),M1}),$opCartsY(new Object[]{GCollections.asSet(false),M2})),$opCartsY(new Object[]{GCollections.asSet(false),M3})));
      $line=48;
      Object Q=$fix($opUnionY($opUnionY($opUnionY($opUnionY($opUnionY(Ls,$opCartsY(new Object[]{M3,M0})),$opCartsY(new Object[]{M3,M0,M1})),$opCartsY(new Object[]{M3,M0,M2})),$opCartsY(new Object[]{M3,M0,M3})),GCollections.asSet("err","F","I")));
      $line=49;
      System.out.println($message(new Object[]{Q}));
      $line=52;
      Object \u03A3=$fix($opUnionY(A,GCollections.asSet('#','!')));
      $line=54;
      Object O=$fix($opUnionY(\u03A3,GCollections.asSet('*')));
      $line=56;
      Object q_0=$fix("I");
      $line=58;
      Object F=$fix(GCollections.asSet("F"));
      $line=61;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,q_0,F,new GMethod(Coder.class,"\u03B4"),new GMethod(Coder.class,"g"),new GMethod(Coder.class,"h")});
      if (true) break $try;
      $line=62;
      $rethrow(new RuntimeException("The function \"createTransducer(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=65;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=69;
      String p1=null;
      p1=$defaultValue(String.class);
      $line=70;
      String p2=null;
      p2=$defaultValue(String.class);
      $line=71;
      String p3=null;
      p3=$defaultValue(String.class);
      $line=72;
      String c1=null;
      c1=$defaultValue(String.class);
      $line=73;
      String c2=null;
      c2=$defaultValue(String.class);
      $line=74;
      String c3=null;
      c3=$defaultValue(String.class);
      $line=75;
      Boolean even=null;
      even=$defaultValue(Boolean.class);
      $line=78;
      if (($opEqualY(q,"I")&&$opMembrY(\u03C3,Alph))) {
        $line=79;
        $result=GCollections.asList(false,\u03C3);
        if (true) break $try;
      }
      else {
        $line=80;
        if (($opEqualY(q,GCollections.asList(false,GCollections.asList(c1)))&&$opMembrY(\u03C3,Alph))) {
          $line=81;
          $result=GCollections.asList(false,GCollections.asList(c1,\u03C3));
          if (true) break $try;
        }
        else {
          $line=82;
          if (($opEqualY(q,GCollections.asList(false,GCollections.asList(c1,c2)))&&$opMembrY(\u03C3,Alph))) {
            $line=83;
            $result=GCollections.asList(false,GCollections.asList(c1,c2,\u03C3));
            if (true) break $try;
          }
          else {
            $line=86;
            if (($bool(($opEqualY(q,GCollections.asList(even,GCollections.asList(c1,c2,c3)))||$opEqualY(q,GCollections.asList(GCollections.asList(p1,p2,p3),even,GCollections.asList(c1,c2,c3)))))&&$opEqualY(\u03C3,'!'))) {
              $line=87;
              $result=GCollections.asList(GCollections.asList(c1,c2,c3),!$bool(even));
              if (true) break $try;
            }
            else {
              $line=89;
              if ((($opEqualY(q,GCollections.asList(GCollections.asList(p1,p2,p3),even,GCollections.asList(c1,c2,c3)))&&$opEqualY(even,true))&&$opEqualY(\u03C3,'#'))) {
                $line=90;
                $result="F";
                if (true) break $try;
              }
              else {
                $line=92;
                if (($opEqualY(q,GCollections.asList(GCollections.asList(p1,p2,p3),even))&&$opMembrY(\u03C3,Alph))) {
                  $line=93;
                  $result=GCollections.asList(GCollections.asList(p1,p2,p3),even,\u03C3);
                  if (true) break $try;
                }
                else {
                  $line=94;
                  if (($opEqualY(q,GCollections.asList(GCollections.asList(p1,p2,p3),even,GCollections.asList(c1)))&&$opMembrY(\u03C3,Alph))) {
                    $line=95;
                    $result=GCollections.asList(GCollections.asList(p1,p2,p3),even,GCollections.asList(c1,\u03C3));
                    if (true) break $try;
                  }
                  else {
                    $line=96;
                    if (($opEqualY(q,GCollections.asList(GCollections.asList(p1,p2,p3),even,GCollections.asList(c1,c2)))&&$opMembrY(\u03C3,Alph))) {
                      $line=97;
                      $result=GCollections.asList(GCollections.asList(p1,p2,p3),even,GCollections.asList(c1,c2,\u03C3));
                      if (true) break $try;
                    }
                    else {
                      $line=99;
                      if ($opEqualY(q,"F")) {
                        $line=100;
                        $result="err";
                        if (true) break $try;
                      }
                      else {
                        $line=102;
                        if ($opEqualY(q,"err")) {
                          $line=103;
                          $result="err";
                          if (true) break $try;
                        }
                        else {
                          $line=106;
                          $result="err";
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=108;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=112;
      String s=null;
      s=$defaultValue(String.class);
      $line=113;
      if (($opEqualY(q,"E")||$opEqualY(q,"F"))) {
        $line=114;
        $result="";
        if (true) break $try;
      }
      else {
        $line=115;
        if ($opEqualY($opAbsolY(q),1)) {
          $line=116;
          s=$cast(String.class,$fix($getArrayValue(q,new Object[]{0})));
          $line=117;
          if ($opEqualY(((java.lang.String)s).length(),0)) {
            $line=118;
            $result=$opAdditY("",\u03C3);
            if (true) break $try;
          }
          else {
            $line=119;
            if (($opEqualY(((java.lang.String)s).length(),1)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
              $line=120;
              $result=$opAdditY("",\u03C3);
              if (true) break $try;
            }
            else {
              $line=121;
              if ((($opEqualY(((java.lang.String)s).length(),2)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                $line=122;
                $result=$opAdditY("",\u03C3);
                if (true) break $try;
              }
              else {
                $line=123;
                if (($opEqualY(((java.lang.String)s).length(),3)&&$opEqualY(\u03C3,':'))) {
                  $line=124;
                  $result=":";
                  if (true) break $try;
                }
                else {
                  $line=125;
                  $result="";
                  if (true) break $try;
                }
              }
            }
          }
        }
        else {
          $line=128;
          Object $v5=$getArrayValue(q,new Object[]{0});
          Object $v6=$getArrayValue(q,new Object[]{1});
          s=$cast(String.class,$fix($v5));
          Object p=$fix($v6);
          $line=129;
          if ($opEqualY(\u03C3,'#')) {
            $line=129;
            $result=$opAdditY(((java.lang.String)s).substring($int(0),$int(p)),"#");
            if (true) break $try;
          }
          else {
            $line=130;
            if (($opEqualY(p,0)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
              $line=130;
              $result="";
              if (true) break $try;
            }
            else {
              $line=131;
              if ($opEqualY(p,0)) {
                $line=131;
                $result=$opAdditY("",\u03C3);
                if (true) break $try;
              }
              else {
                $line=132;
                if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                  $line=132;
                  $result=((java.lang.String)s).charAt($int(0));
                  if (true) break $try;
                }
                else {
                  $line=133;
                  if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                    $line=133;
                    $result="";
                    if (true) break $try;
                  }
                  else {
                    $line=134;
                    if ($opEqualY(p,1)) {
                      $line=134;
                      $result=$opAdditY($opAdditY("",((java.lang.String)s).charAt($int(0))),\u03C3);
                      if (true) break $try;
                    }
                    else {
                      $line=135;
                      if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                        $line=135;
                        $result=$opAdditY($opAdditY("",((java.lang.String)s).charAt($int(0))),((java.lang.String)s).charAt($int(1)));
                        if (true) break $try;
                      }
                      else {
                        $line=136;
                        if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
                          $line=136;
                          $result="$";
                          if (true) break $try;
                        }
                        else {
                          $line=137;
                          $result=$opAdditY($opAdditY($opAdditY("",((java.lang.String)s).charAt($int(0))),((java.lang.String)s).charAt($int(1))),\u03C3);
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=140;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"h",$line);
    }
    return $result;
  }
}
