// ===============================
// Proyecto 2 (ISIS1106 - Lenguajes y Máquinas)
// Realizado por:
// Carol Florido - 202111430
// Nicolás Rincón - 202021963
//
// Basado en el trabajo original de Silvia Takahashi
// ===============================

// Finite State Transducer that implements a Decoder
// Input: Strings of the form ρ_1!ρ_2!ρ_3!‥.!ρ_{2n-1}!ρ_{2n}# where ρ_i∈('a'‥.'d')* of length 3 or ρ_i="*" 
//		   and ρ_i="*" can only happen if i is even. If an even ρ_i≠"*", that means ρ_i≠ρ_{i-1}.

// Input: Strings of the form ⍸_1!⍸_2!⍸_3!‥.!⍸_{2n-1}!⍸_{2n}# where ⍸_i∈('a'‥.'d')* of length 3, ∀i:0≤i≤2n,
//  		the three characters that compose any ⍸_i are not necessarily distinct, and ρ_i="*"⇒⍸_i=⍸_{i-1}.
// ===============================

using gold.**

var  Alph 

procedure main(args:String[]) begin
 	//Trial
	if  args.length=0  then  Alph:= { 'a', 'c', 't'}
	else	
		Alph := {args[0].charAt(i) |  0 ≤ i < args[0].length()}\{'$','#'}
    end
	
	

	deCoder := createTransducer(Alph)
	print "Input strings of the form xyz:W#. with x, y, over "+Alph +"and W  over   "+ Alph+"* (end with an empty string)"
			
	
	Utilities.test(deCoder)
end




 

function createTransducer(A):ITransducer begin
	Ls := A
	M0 := {""}
	M1 := {""+a|a∈Ls}
	M2 := {""+a+b| a∈Ls,b∈Ls\{a}}
	M3 := {""+a+b+c|a∈Ls,b∈Ls\{a},c∈Ls\{b,a}}
	Q:=  {⟨s⟩|s∈M1∪ M2∪M3∪M0} ∪ {⟨s,d⟩|s∈M3, 0 ≤d≤ 2}∪{"E","F"}
	print Q
	
	Σ:= A ∪  { '#',':'}
	O := Σ  ∪  { '$'}
	q₀:=⟨""⟩
	F:={"F"} 
	return GDeterministicTransducer(Q,O,Σ,q₀,F,δ1,g,h1)
end
g(x):= ""



 

 
 function δ1(q,σ) begin
    var s:String
	
	if q = "E" or q ="F" then
		return "E"
    elseif |q| = 1 then
      s:= q[0]
   	  if s.length()  = 0  and σ≠ '#' and σ≠ ':'   and σ≠ '$' then
        return   	⟨""+σ⟩
      elseif s.length()  = 1 and σ≠s.charAt(0)   and σ≠ '#' and σ≠ ':' and σ≠ '$' then
        return   	⟨""+s+σ⟩
      elseif s.length()  = 2 and σ≠s.charAt(0) and σ≠s.charAt(1) and σ≠ '#'  and σ≠ ':' and σ≠ '$'  then
        return   	⟨""+s+σ⟩
      elseif s.length() = 3  and σ = ':' then
   	      return   	⟨s,0⟩
   	   else 
   	    	return "E"
   	   end
   	else // |q| = 2
   	  s,p:= q[0],q[1]
   	  if  σ = ':' then return   	"E" 
   	  elseif  σ = '#' then return   	"F"
   	  elseif  σ = '$' then return   	⟨s,0⟩
   	  
   	  elseif p=0 and σ=s.charAt(0) then return ⟨s,1⟩
   	  elseif p=0  then return ⟨s,0⟩
   	  elseif p=1 and  σ=s.charAt(0) then return ⟨s,1⟩
   	  elseif p=1 and  σ=s.charAt(1) then return ⟨s,2⟩
   	  elseif p=1  then return ⟨s,0⟩
   	  elseif p=2 and  σ=s.charAt(0) then return ⟨s,1⟩
   	  elseif p=2 and  σ=s.charAt(2) then return "E"
   	
   	 else return	⟨s,0⟩
   	  end
end
end
 
function h1(q,σ) begin
    var s:String
	if q = "E" or q ="F" then
		return ""
    elseif  |q| = 2 then
   	  s,p:= q[0],q[1]
   	  if  σ='#' then return  "#"
   	  elseif  σ='$' then return s
   	  elseif p=2 and  σ=s.charAt(2) then return ""
   	  else return  σ
   	  end
   	 elseif σ='$' then  return ""
   	 else return σ
end
end
